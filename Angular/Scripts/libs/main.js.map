{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,+JAA+J,SAAS,6I;;;;;;;;;;;;;;;;;;;;;;;;;ACAlH;AAEJ;AAUlD;IAII,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,UAAK,GAAG,KAAK,CAAC;IAG0B,CAAC;IAEzC,oCAAa,GAAb;QAEI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YACpC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAAQ,GAAR,UAAS,GAAW;QAChB,GAAG,GAAG,CAAC,CAAC;QAER,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,yCAAyC,EAAE,GAAG,CAAC,CAAC;IAClF,CAAC;IAjBQ,YAAY;QARxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGlB,SAAS,EAAE,CAAC,+DAAU,CAAC;SAC1B,CAAC;QAED,gEAAU,EAAE;yCAKiB,+DAAU;OAJ3B,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AAEM;AACS;AAaxD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,qEAAgB;aACnB;YACC,SAAS,EAAE,EAAE;YACf,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n    <h1>\\r\\n        Welcome to {{ title }}!\\r\\n    </h1>\\r\\n    <h1>\\r\\n        <button kendoButton (click)=\\\"onButtonClick()\\\">My Kendo UI Button</button>\\r\\n    </h1>\\r\\n</div>\\r\\n\"","import { Component, Injectable } from '@angular/core';\nimport { Observable } from '../../node_modules/rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [HttpClient]\n})\n\n@Injectable()\nexport class AppComponent {\n    title = 'app';\n    num: number;\r\n    \r\n    constructor(private http: HttpClient) { }\r\n\r\n    onButtonClick() {\n        \r\n        this.testPost(this.num).subscribe(result => {\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    testPost(num: number): Observable<string> {\r\n        num = 4;\r\n        \r\n        return this.http.post<string>(\"http://localhost:54796/api/Game/TestApi\", num);\r\n    }\r\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n    providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}